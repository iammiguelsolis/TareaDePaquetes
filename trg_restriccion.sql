ALTER TABLE AsistenciaEmpleado
ADD (
    ESTADO VARCHAR2(20),     
    OBSERVACION VARCHAR2(200)
);


CREATE TABLE AsistenciaAudit (
    AUDIT_ID        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMPLOYEE_ID     NUMBER(6),
    FECHA_ASISTENCIA DATE,
    HORA_MARCA      DATE,
    ACCION          VARCHAR2(50),
    DETALLE         VARCHAR2(400),
    CREATED_AT      DATE DEFAULT SYSDATE
);


CREATE OR REPLACE TRIGGER trg_restringir_marca_ingreso
BEFORE INSERT ON AsistenciaEmpleado
FOR EACH ROW
DECLARE
    v_dia_semana   VARCHAR2(10);
    v_dia_horario  VARCHAR2(10);
    v_hora_inicio  DATE;
    v_diff_min     NUMBER;
PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    v_dia_semana := TO_CHAR(:NEW.FECHA_ASISTENCIA, 'DAY', 'NLS_DATE_LANGUAGE=SPANISH');
    v_dia_semana := RTRIM(UPPER(v_dia_semana));

    SELECT UPPER(DIA_SEMANA), HORA_INICIO
    INTO v_dia_horario, v_hora_inicio
    FROM HorarioEmpleado
    WHERE EMPLOYEE_ID = :NEW.EMPLOYEE_ID
      AND UPPER(DIA_SEMANA) = v_dia_semana;

    v_diff_min := (:NEW.HORA_INICIO - v_hora_inicio) * 24 * 60;

    IF ABS(v_diff_min) <= 30 THEN
        :NEW.ESTADO := 'PRESENTE';
        :NEW.OBSERVACION := 'Marca dentro del rango permitido';
        
        INSERT INTO AsistenciaAudit (EMPLOYEE_ID, FECHA_ASISTENCIA, HORA_MARCA, ACCION, DETALLE)
        VALUES (:NEW.EMPLOYEE_ID, :NEW.FECHA_ASISTENCIA, :NEW.HORA_INICIO, 'MARCA_OK',
                'Marca dentro de ±30 minutos (' || TO_CHAR(v_diff_min, 'FM99990') || ' min)');
        COMMIT;
    ELSE
        :NEW.ESTADO := 'INASISTENCIA';
        :NEW.OBSERVACION := 'Marca fuera de ±30 min; registrada como INASISTENCIA';

        INSERT INTO AsistenciaAudit (EMPLOYEE_ID, FECHA_ASISTENCIA, HORA_MARCA, ACCION, DETALLE)
        VALUES (:NEW.EMPLOYEE_ID, :NEW.FECHA_ASISTENCIA, :NEW.HORA_INICIO, 'MARCA_FUERA_RANGO',
                'Marca fuera de ±30 minutos (' || TO_CHAR(v_diff_min, 'FM99990') || ' min). Marcada como INASISTENCIA.');
        COMMIT;
    END IF;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        INSERT INTO AsistenciaAudit (EMPLOYEE_ID, FECHA_ASISTENCIA, HORA_MARCA, ACCION, DETALLE)
        VALUES (:NEW.EMPLOYEE_ID, :NEW.FECHA_ASISTENCIA, :NEW.HORA_INICIO, 'SIN_HORARIO',
                'No se encontró horario para el empleado en ese día.');
        COMMIT;

        RAISE_APPLICATION_ERROR(-20021, 'No existe horario para el empleado en la fecha especificada.');
    WHEN OTHERS THEN
        INSERT INTO AsistenciaAudit (EMPLOYEE_ID, FECHA_ASISTENCIA, HORA_MARCA, ACCION, DETALLE)
        VALUES (:NEW.EMPLOYEE_ID, :NEW.FECHA_ASISTENCIA, :NEW.HORA_INICIO, 'ERROR_TRIGGER',
                SQLERRM);
        COMMIT;
        RAISE;
END;
/